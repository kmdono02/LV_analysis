# analysis_data_edit %>%
#   group_by(Identifiers, demographics_Risk) %>%
#   summarise(n=n()) %>%
#   arrange(desc(n))
ggplot(analysis_data_edit, mapping=aes(y=viq_score_long, x=Visit_edit, group=Identifiers))+
geom_point()+
geom_line()
ggplot(analysis_data_edit, mapping=aes(y=nviq_score_long, x=Visit_edit, group=Identifiers))+
geom_point()+
geom_line()
# # Let's look at some outliers
# analysis_data_edit %>%
#   filter(viq_score_long< -3) %>%
#   select(Identifiers, Visit, DAS_SA.verbal_STD_SCORE, viq_score_long, DAS_SA.verbal_STD_SCORE_zscore, mullen_viq_age_equivalent_zscore) %>%
#   arrange(Identifiers, Visit) %>%
#   View()
# First, make age a long form variable
analysis_data_edit <-
analysis_data_edit %>%
mutate(candidate_age = ifelse(Visit=="V12", V12_Candidate_Age,
ifelse(Visit=="V24", V24_Candidate_Age,
ifelse(Visit=="VSA", VSA_Candidate_Age, NA)))) %>%
filter(is.na(candidate_age)==0&is.na(V24_ASD_simple)==0&V24_ASD_risk!="LR_YES")
# Look at status
analysis_data_edit_check <-
analysis_data_edit %>%
filter(is.na(viq_score_long)==0&is.na(nviq_score_long)==0&is.na(V24_ASD_simple)==0)
# Send IDs to Kelly of those with Active - Flagged
analysis_data_edit_check_for_kelly <-
analysis_data_edit_check %>%
filter(V24_ASD_risk%in%c("HR_YES", "HR_NO")) %>%
filter(demographics_Status=="Active - Flagged") %>%
select(Identifiers, demographics_Status, demographics_Status_comments) %>%
distinct(.) %>%
filter(!grepl("family id", demographics_Status_comments, ignore.case = TRUE))
write_csv(analysis_data_edit_check_for_kelly, file="data/active_flagged_status_for_kelly.csv")
# Mixed effects model fit
# VIQ
# traj_fit_viq <- lme(fixed = viq_score_long~candidate_age+V24_ASD_simple+
#                       candidate_age*V24_ASD_simple,
#                     random = ~1+candidate_age|Identifiers,
#                     data = analysis_data_edit,
#                     na.action = na.omit)
# NVIQ
# traj_fit_nviq <- lme(fixed = nviq_score_long~candidate_age+
#                        V24_ASD_simple+candidate_age*V24_ASD_simple,
#                     random = ~1+candidate_age|Identifiers,
#                     data = analysis_data_edit,
#                     na.action = na.omit)
# First compute summary stats for variables of interest by group and visit
# Starting with behavioral measures of interest
analysis_data_edit_table <-
analysis_data_edit %>%
plyr::rename(replace=c("mullen_expressive_language_age_equivalent_zscore"=
"MSEL E Lang Z-score",
"mullen_fine_motor_age_equivalent_zscore"=
"MSEL Fine Motor Z-score",
"mullen_gross_motor_age_equivalent_zscore"=
"MSEL Gross Motor Z-score",
"mullen_receptive_language_age_equivalent_zscore"=
"MSEL R Lang Z-score",
"mullen_visual_reception_age_equivalent_zscore"=
"MSEL Visual Recep Z-score",
"mullen_nviq_age_equivalent_zscore"=
"MSEL Nonverbal IQ Z-score",
"mullen_viq_age_equivalent_zscore"=
"MSEL Verbal IQ Z-score",
"DAS_SA_SNC_STD_SCORE_zscore"=
"DAS SNC Z-score",
"DAS_SA.verbal_STD_SCORE_zscore"=
"DAS Verbal Z-score"))
v12_summ_stats_behav <-
analysis_data_edit_table %>%
filter(Visit_edit=="V12") %>%
tbl_summary(by=V24_ASD_risk,
include=c("V24_ASD_risk",
names(analysis_data_edit_table)[
grepl("z-score", names(analysis_data_edit_table),
ignore.case = TRUE)]),
missing="ifany",
missing_text = "Missing",
statistic = list(all_continuous() ~ "{mean} ({sd})"))
v24_summ_stats_behav <-
analysis_data_edit_table %>%
filter(Visit_edit=="V24") %>%
tbl_summary(by=V24_ASD_risk,
include=c("V24_ASD_risk",
names(analysis_data_edit_table)[
grepl("z-score", names(analysis_data_edit_table),
ignore.case = TRUE)]),
missing="ifany",
missing_text = "Missing",
statistic = list(all_continuous() ~ "{mean} ({sd})"))
vsa_summ_stats_behav <-
analysis_data_edit_table %>%
filter(Visit_edit=="VSA") %>%
tbl_summary(by=V24_ASD_risk,
include=c("V24_ASD_risk",
names(analysis_data_edit_table)[
grepl("z-score", names(analysis_data_edit_table),
ignore.case = TRUE)]),
missing="ifany",
missing_text = "Missing",
statistic = list(all_continuous() ~ "{mean} ({sd})"))
tbl_merge(list(v12_summ_stats_behav, v24_summ_stats_behav, vsa_summ_stats_behav),
tab_spanner = c("12 Months", "24 Months", "School Age")) %>%
as_flex_table() %>%
autofit() %>%
save_as_image(path="tables/mullen_das_zscores_all_times.png")
# Check by risk: should have mean 0 and SD 1 in LR group for all time points
v12_summ_stats_behav <-
analysis_data_edit_table %>%
filter(Visit_edit=="V12") %>%
tbl_summary(by=V12.demographics.Risk,
include=c("V12.demographics.Risk",
names(analysis_data_edit_table)[
grepl("z-score", names(analysis_data_edit_table),
ignore.case = TRUE)]),
missing="ifany",
missing_text = "Missing",
statistic = list(all_continuous() ~ "{mean} ({sd})"))
v24_summ_stats_behav <-
analysis_data_edit_table %>%
filter(Visit_edit=="V24") %>%
tbl_summary(by=V12.demographics.Risk,
include=c("V12.demographics.Risk",
names(analysis_data_edit_table)[
grepl("z-score", names(analysis_data_edit_table),
ignore.case = TRUE)]),
missing="ifany",
missing_text = "Missing",
statistic = list(all_continuous() ~ "{mean} ({sd})"))
vsa_summ_stats_behav <-
analysis_data_edit_table %>%
filter(Visit_edit=="VSA") %>%
tbl_summary(by=V12.demographics.Risk,
include=c("V12.demographics.Risk",
names(analysis_data_edit_table)[
grepl("z-score", names(analysis_data_edit_table),
ignore.case = TRUE)]),
missing="ifany",
statistic = list(all_continuous() ~ "{mean} ({sd})"))
tbl_merge(list(v12_summ_stats_behav, v24_summ_stats_behav, vsa_summ_stats_behav),
tab_spanner = c("12 Months", "24 Months", "School Age")) %>%
as_flex_table() %>%
autofit() %>%
save_as_image(path="tables/mullen_das_zscores_all_times_byrisk.png")
model_formulas <-
list(viq_score_long~candidate_age,
nviq_score_long~candidate_age)
names(model_formulas) <- c("viq", "nviq")
traj_fit <- list()
lme_fit_data <- list()
lme_fit_data_for_knn <- list()
analysis_data_edit <-
analysis_data_edit %>%
filter(V24_ASD_risk%in%c("HR_YES", "HR_NO"))
for(i in 1:length(model_formulas)){
# Create directory in folder for each IQ score
dir.create(path=paste0("plots/", names(model_formulas[i])))
dir.create(path=paste0("tables/", names(model_formulas[i])))
traj_fit[[i]] <- lme(fixed = model_formulas[[i]],
random = ~1+candidate_age|Identifiers,
data = analysis_data_edit,
na.action = na.omit,
control = lmeControl(opt='optim', maxIter=500, msMaxIter = 500))
# Extract slopes and intercepts for each person
# First, add in random intercepts.  Then merge in covariate info
lme_fit_data[[i]] <-
data.frame("Identifiers"=
rownames(traj_fit[[i]]$coefficients$random$Identifiers),
"random_ints"=
traj_fit[[i]]$coefficients$random$Identifiers[,"(Intercept)"],
"random_age_slope"=
traj_fit[[i]]$coefficients$random$Identifiers[,"candidate_age"] )%>%
left_join(analysis_data_edit, by="Identifiers") %>%
arrange(Identifiers, candidate_age) %>%
mutate(
subject_slope_age = random_age_slope+traj_fit[[i]]$coefficients$fixed["candidate_age"],
subject_ints = random_ints+traj_fit[[i]]$coefficients$fixed["(Intercept)"]
# ,
# subject_slope_age =
#        ifelse(V24_ASD_simple=="YES",
#               random_age_slope+traj_fit_viq$coefficients$fixed["candidate_age"]+
#                 traj_fit_viq$coefficients$fixed["candidate_age:V24_ASD_simpleYES"],
#               random_age_slope+traj_fit_viq$coefficients$fixed["candidate_age"]),
# subject_ints =
#        ifelse(V24_ASD_simple=="YES",
#               random_ints+traj_fit_viq$coefficients$fixed["(Intercept)"]+
#                 traj_fit_viq$coefficients$fixed["V24_ASD_simpleYES"],
#               random_ints+traj_fit_viq$coefficients$fixed["(Intercept)"])
) %>%
select(-X1) %>%
distinct(.)
# Now, need to select slopes and intercepts for analysis
lme_fit_data_for_knn[[i]] <-
lme_fit_data[[i]] %>%
select(Identifiers, subject_slope_age, subject_ints, V24_ASD_simple) %>%
distinct(.)
# Add names
names(traj_fit)[i] <- names(model_formulas)[i]
names(lme_fit_data)[i] <- names(model_formulas)[i]
names(lme_fit_data_for_knn)[i] <- names(model_formulas)[i]
# Let's visualize
# Set color blind safe color scale
cbp1 <- c("#56B4E9", "#D55E00", "#56B4E9",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
print(ggplot(data=lme_fit_data_for_knn[[i]],
mapping=aes(y=subject_ints, x=subject_slope_age,
color=V24_ASD_simple, shape=V24_ASD_simple))+
geom_point(size=2)+
labs(y="Predicted Intercept", x="Predicted Slope: Age",
color="V24 ASD Diagnosis", shape="V24 ASD Diagnosis")+
scale_colour_manual(values=cbp1)+
labs(title = "Mixed model predicted intercepts and slopes by age",
subtitle = paste0("for ", names(model_formulas)[i]))+
theme_bw()+
theme(text=element_text(size=20)))
ggsave(filename = paste0("plots/", names(model_formulas[i]),
"/scatter_slopes_ints.png"),
limitsize = FALSE, scale=2)
}
library(tidyverse)
library(gtsummary)
library(flextable)
library(readxl)
library(nlme)
library(ggpubr)
library(janitor)
library(formula.tools)
clus_best <- list()
i=1
# First, normalize (center and scale) slopes and ints
lme_fit_data_for_knn[[i]] <-
lme_fit_data_for_knn[[i]] %>%
mutate(subject_ints_normed =
(subject_ints - mean(lme_fit_data_for_knn[[i]]$subject_ints))/
sd(lme_fit_data_for_knn[[i]]$subject_ints),
subject_slope_age_normed =
(subject_slope_age - mean(lme_fit_data_for_knn[[i]]$subject_slope_age))/
sd(lme_fit_data_for_knn[[i]]$subject_slope_age))
# Just print boxplots of normed results by ASD diagnosis
int_slope_summ_plots <-
list(
as_ggplot(text_grob(paste0("Boxplots of subject-specific slopes and intercepts for ",
names(model_formulas)[i]), size=20,
just="left")) +
theme(plot.margin = margin(0,3,0,0, "cm")),
NULL,
ggplot(data=lme_fit_data_for_knn[[i]],
mapping=aes(x=V24_ASD_simple, y=subject_ints_normed,
fill=V24_ASD_simple)) +
geom_boxplot() +
labs(x="V24 ASD Diagnosis", y="Predicted Intercept")+
scale_colour_manual(values=cbp1)+
theme_bw()+
theme(text=element_text(size=20),
legend.position = "none"),
ggplot(data=lme_fit_data_for_knn[[i]],
mapping=aes(x=V24_ASD_simple, y=subject_slope_age_normed,
fill=V24_ASD_simple)) +
geom_boxplot() +
labs(x="V24 ASD Diagnosis", y="Predicted Slope: Age")+
scale_colour_manual(values=cbp1)+
theme_bw()+
theme(text=element_text(size=20),
legend.position = "none")
)
ggarrange(plotlist=int_slope_summ_plots, nrow=2, ncol=2,
heights=c(1,5))
ggsave(filename = paste0("plots/", names(model_formulas[i]),
"/boxplot_slopes_ints.png"),
limitsize = FALSE, scale=2)
# NOTE: CANNOT TEST FOR SIGN DIFFERENCES BY GROUP IF GROUP USED TO FIT MIXED MODELS, ASD        GROUP USE INDIRECTLY IN CLUSTERING
# Now, create function to compute BIC:
# Calc AIC and BIC
kmeansAICBIC = function(fit){
m = ncol(fit$centers)
n = length(fit$cluster)
k = nrow(fit$centers)
D = fit$tot.withinss
return(data.frame(AIC = D + 2*m*k,
BIC = D + log(n)*m*k))
}
# Now, try various numbers of clusters and compare using BIC
kmeans_clust_fits <- list()
kmeans_criteria_fits <- list()
no_of_clusters <- 15
for(j in 1:no_of_clusters){
kmeans_clust_fits[[j]] <-
kmeans(x=lme_fit_data_for_knn[[i]]%>%
select(subject_ints_normed, subject_slope_age_normed),
centers=j, nstart=10)
# Store AIC, BIC
kmeans_criteria_fits[[j]] <-
kmeansAICBIC(kmeans_clust_fits[[j]]) %>%
mutate(clusters = j)
}
kmeans_criterion <- do.call("rbind", kmeans_criteria_fits)
# Pick one with lowest BIC
clus_lowest_bic <-
which(kmeans_criterion$BIC==min(kmeans_criterion$BIC))
clus_best[[i]] <- kmeans_clust_fits[[clus_lowest_bic]]
lme_fit_data_for_knn[[i]] <- data.frame(lme_fit_data_for_knn[[i]],
"cluster"=factor(clus_best[[i]]$cluster))
# Plot BIC of clusters
print(ggplot(data=kmeans_criterion, mapping=aes(x=clusters, y=BIC))+
geom_point()+
geom_path()+
theme_bw()+
xlab("Number of Clusters")+
labs(title=paste0("Cluster fit index using BIC for ", names(model_formulas)[i]))+
theme_bw()+
theme(text=element_text(size=20)))
ggsave(filename = paste0("plots/", names(model_formulas[i]),
"/bic_plot.png"),
limitsize = FALSE, scale=2)
# Plot boxplot and scatterplot to visualize clusters.
# First, create frequency table of cluster by diagnosis (don't want clusters to just reflect     DX)
freq_table_clust <-
proc_freq(lme_fit_data_for_knn[[i]],
row="V24_ASD_simple", col="cluster",
include.row_percent = FALSE, include.table_percent = FALSE,
main = paste0("Frequency counts for KNN clusters for ",
names(model_formulas)[i], "\nby 24 month ASD diagnosis"))
print(freq_table_clust)
save_as_image(x=freq_table_clust,
path=paste0("tables/", names(model_formulas[i]),
"/freq_table_clust_asd.png"))
# Now provide visuals using scatterplot, faceted by ASD DX
print(ggplot(data=lme_fit_data_for_knn[[i]],
mapping=aes(x=subject_slope_age_normed, y=subject_ints_normed,
color=cluster, shape=cluster))+
geom_point(size=4)+
facet_grid(~V24_ASD_simple)+
scale_shape_manual(values =
if(clus_lowest_bic<5){
15:(15+clus_lowest_bic-1)
}else{
c(15:18, 7:(7+clus_lowest_bic-4-1))
})+
labs(x="Predicted Slope by Age: Normed",
y="Predicted Intercept: Normed",
title="Clusters from KNN",
subtitle = paste0("for ", names(model_formulas[i]),
"; by 24 month ASD diagnosis"))+
theme_bw()+
theme(text=element_text(size=20)))
ggsave(filename = paste0("plots/", names(model_formulas[i]),
"/visual_clusters_asd.png"),
limitsize = FALSE, scale=2)
# Now plot actual values of VIQ over time, with subjects colored by cluster membership
lme_fit_data_knn_plus_raw <-
inner_join(lme_fit_data[[i]], lme_fit_data_for_knn[[i]])
model_formulas
model_formulas[[i]]
lhs.vars(model_formulas[[i]])
print(ggplot(data=lme_fit_data_knn_plus_raw,
mapping=aes_string(x="candidate_age", y=lhs.vars(model_formulas[[i]]),
color="cluster", group="Identifiers"))+
geom_point()+
geom_line()+
facet_grid(~V24_ASD_simple)+
labs(x="Age (months)", y=ifelse(i==1, "Verbal IQ", "Nonverbal IQ"),
title="Observed trends and LNN clusters",
subtitle = paste0("for ", names(model_formulas[i]),
"; by 24 month ASD diagnosis"))+
theme_bw()+
theme(text=element_text(size=20),
legend.position = "none"))
# Now let's try and cluster based on both intercept and slope
clus_best <- list()
for(i in 1:length(model_formulas)){
# First, normalize (center and scale) slopes and ints
lme_fit_data_for_knn[[i]] <-
lme_fit_data_for_knn[[i]] %>%
mutate(subject_ints_normed =
(subject_ints - mean(lme_fit_data_for_knn[[i]]$subject_ints))/
sd(lme_fit_data_for_knn[[i]]$subject_ints),
subject_slope_age_normed =
(subject_slope_age - mean(lme_fit_data_for_knn[[i]]$subject_slope_age))/
sd(lme_fit_data_for_knn[[i]]$subject_slope_age))
# Just print boxplots of normed results by ASD diagnosis
int_slope_summ_plots <-
list(
as_ggplot(text_grob(paste0("Boxplots of subject-specific slopes and intercepts for ",
names(model_formulas)[i]), size=20,
just="left")) +
theme(plot.margin = margin(0,3,0,0, "cm")),
NULL,
ggplot(data=lme_fit_data_for_knn[[i]],
mapping=aes(x=V24_ASD_simple, y=subject_ints_normed,
fill=V24_ASD_simple)) +
geom_boxplot() +
labs(x="V24 ASD Diagnosis", y="Predicted Intercept")+
scale_colour_manual(values=cbp1)+
theme_bw()+
theme(text=element_text(size=20),
legend.position = "none"),
ggplot(data=lme_fit_data_for_knn[[i]],
mapping=aes(x=V24_ASD_simple, y=subject_slope_age_normed,
fill=V24_ASD_simple)) +
geom_boxplot() +
labs(x="V24 ASD Diagnosis", y="Predicted Slope: Age")+
scale_colour_manual(values=cbp1)+
theme_bw()+
theme(text=element_text(size=20),
legend.position = "none")
)
ggarrange(plotlist=int_slope_summ_plots, nrow=2, ncol=2,
heights=c(1,5))
ggsave(filename = paste0("plots/", names(model_formulas[i]),
"/boxplot_slopes_ints.png"),
limitsize = FALSE, scale=2)
# NOTE: CANNOT TEST FOR SIGN DIFFERENCES BY GROUP IF GROUP USED TO FIT MIXED MODELS, ASD        GROUP USE INDIRECTLY IN CLUSTERING
# Now, create function to compute BIC:
# Calc AIC and BIC
kmeansAICBIC = function(fit){
m = ncol(fit$centers)
n = length(fit$cluster)
k = nrow(fit$centers)
D = fit$tot.withinss
return(data.frame(AIC = D + 2*m*k,
BIC = D + log(n)*m*k))
}
# Now, try various numbers of clusters and compare using BIC
kmeans_clust_fits <- list()
kmeans_criteria_fits <- list()
no_of_clusters <- 15
for(j in 1:no_of_clusters){
kmeans_clust_fits[[j]] <-
kmeans(x=lme_fit_data_for_knn[[i]]%>%
select(subject_ints_normed, subject_slope_age_normed),
centers=j, nstart=10)
# Store AIC, BIC
kmeans_criteria_fits[[j]] <-
kmeansAICBIC(kmeans_clust_fits[[j]]) %>%
mutate(clusters = j)
}
kmeans_criterion <- do.call("rbind", kmeans_criteria_fits)
# Pick one with lowest BIC
clus_lowest_bic <-
which(kmeans_criterion$BIC==min(kmeans_criterion$BIC))
clus_best[[i]] <- kmeans_clust_fits[[clus_lowest_bic]]
lme_fit_data_for_knn[[i]] <- data.frame(lme_fit_data_for_knn[[i]],
"cluster"=factor(clus_best[[i]]$cluster))
# Plot BIC of clusters
print(ggplot(data=kmeans_criterion, mapping=aes(x=clusters, y=BIC))+
geom_point()+
geom_path()+
theme_bw()+
xlab("Number of Clusters")+
labs(title=paste0("Cluster fit index using BIC for ", names(model_formulas)[i]))+
theme_bw()+
theme(text=element_text(size=20)))
ggsave(filename = paste0("plots/", names(model_formulas[i]),
"/bic_plot.png"),
limitsize = FALSE, scale=2)
# Plot boxplot and scatterplot to visualize clusters.
# First, create frequency table of cluster by diagnosis (don't want clusters to just reflect     DX)
freq_table_clust <-
proc_freq(lme_fit_data_for_knn[[i]],
row="V24_ASD_simple", col="cluster",
include.row_percent = FALSE, include.table_percent = FALSE,
main = paste0("Frequency counts for KNN clusters for ",
names(model_formulas)[i], "\nby 24 month ASD diagnosis"))
print(freq_table_clust)
save_as_image(x=freq_table_clust,
path=paste0("tables/", names(model_formulas[i]),
"/freq_table_clust_asd.png"))
# Now provide visuals using scatterplot, faceted by ASD DX
print(ggplot(data=lme_fit_data_for_knn[[i]],
mapping=aes(x=subject_slope_age_normed, y=subject_ints_normed,
color=cluster, shape=cluster))+
geom_point(size=4)+
facet_grid(~V24_ASD_simple)+
scale_shape_manual(values =
if(clus_lowest_bic<5){
15:(15+clus_lowest_bic-1)
}else{
c(15:18, 7:(7+clus_lowest_bic-4-1))
})+
labs(x="Predicted Slope by Age: Normed",
y="Predicted Intercept: Normed",
title="Clusters from KNN",
subtitle = paste0("for ", names(model_formulas[i]),
"; by 24 month ASD diagnosis"))+
theme_bw()+
theme(text=element_text(size=20)))
ggsave(filename = paste0("plots/", names(model_formulas[i]),
"/visual_clusters_asd.png"),
limitsize = FALSE, scale=2)
# Now plot actual values of VIQ over time, with subjects colored by cluster membership
lme_fit_data_knn_plus_raw <-
inner_join(lme_fit_data[[i]], lme_fit_data_for_knn[[i]])
print(ggplot(data=lme_fit_data_knn_plus_raw,
mapping=aes_string(x="candidate_age", y=lhs.vars(model_formulas[[i]]),
color="cluster", group="Identifiers"))+
geom_point()+
geom_line()+
facet_grid(~V24_ASD_simple)+
labs(x="Age (months)", y=ifelse(i==1, "Verbal IQ", "Nonverbal IQ"),
title="Observed trends and LNN clusters",
subtitle = paste0("for ", names(model_formulas[i]),
"; by 24 month ASD diagnosis"))+
theme_bw()+
theme(text=element_text(size=20),
legend.position = "none"))
ggsave(filename = paste0("plots/", names(model_formulas[i]),
"/obs_trends_clusters_asd.png"),
limitsize = FALSE, scale=2)
}
